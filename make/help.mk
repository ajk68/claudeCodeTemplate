# Help and documentation commands

.PHONY: help

# Default target
help: ## Show this help message
	@echo "üöÄ AI Coach Research - Development Commands"
	@echo ""
	@echo "üîß DEVELOPMENT SETUP:"
	@echo "  make install                  Install all dependencies (combines install-python + install-node)"
	@echo "  make install-python           Install Python dependencies only (uv sync)"
	@echo "  make install-node             Install Node.js dependencies only (npm install)"
	@echo "  make sync                     Update Python dependencies + lock file (uv sync --upgrade)"
	@echo "  make sync-all                 Update all dependencies (combines sync + npm update)"
	@echo "  make setup-mcp                Auto-configure MCP servers for Claude Code"
	@echo ""
	@echo "üß™ TESTING & QUALITY:"
	@echo "  make test                     Run all tests (pytest via uv)"
	@echo "  make test-coverage            Run tests + generate coverage report (HTML + terminal)"
	@echo "  make lint                     Check code issues (ruff check, no changes)"
	@echo "  make lint-fix                 Auto-fix safe linting issues (ruff check --fix)"
	@echo "  make lint-fix-unsafe          Fix all issues including unsafe ones (use carefully)"
	@echo "  make format                   Format code style (ruff format)"
	@echo ""
	@echo "üßπ CLEANUP:"
	@echo "  make clean                    Clean caches + temp files (keeps dependencies)"
	@echo "  make clean-all                Deep clean including node_modules (requires reinstall)"
	@echo ""
	@echo "üì¶ CONTEXT GENERATION:"
	@echo "  make generate-context-full    All files in repo"
	@echo "  make generate-context-code    Code only, no docs/tests"
	@echo "  make generate-context-python  Python files only"
	@echo "  make generate-context-small   Compressed core code"
	@echo "  make generate-context-from-files  Specific files only (FILES=\"file1 file2\")"
	@echo "  make claude-context           Claude config files (user + project)"
	@echo ""
	@echo "ü§ñ AI DELEGATION:"
	@echo "  make ai-query                 Ask AI about file/code (auto-selects Claude/Gemini)"
	@echo "  make ai-analyze-project       Query entire codebase (uses context generation)"
	@echo "  make review-diff              Quick review of git diff changes"
	@echo "  make analyze-files            Architecture review of multiple files"
	@echo "  make analyze-file             Architecture review of single file"
	@echo "  make project-status           Git status + recent commits summary"
	@echo "  make code-search              Fast regex search (ripgrep)"
	@echo "  make analyze-logs             Debug log analysis (last 100 lines)"
	@echo ""
	@echo "üóÑÔ∏è DATABASE:"
	@echo "  make db-schema                Check database schema"
	@echo ""
	@echo "ü™µ LOGGING & MONITORING:"
	@echo "  make dev                      Start all processes from Procfile (shoreman)"
	@echo "  make logs-start               Run processes in background with logging"
	@echo "  make logs-watch               Tail all logs in real-time"
	@echo "  make logs-analyze             AI analysis of recent logs (PROMPT optional)"
	@echo "  make logs-clean               Delete all log files"
	@echo "  make logs-tail                Tail specific log (FILE=frontend|backend)"
	@echo "  make logs-stop                Kill background logging processes"
	@echo "  make logs-help                Show logging setup guide"
	@echo ""
	@echo "üí° EXAMPLES:"
	@echo "  make ai-query PROMPT=\"What does this do?\" FILE=\"script.py\""
	@echo "  make ai-analyze-project PROMPT=\"Find all TODO items\" SCOPE=full"
	@echo "  make analyze-files FILES=\"api.py models.py\""
	@echo "  make generate-context-full                      # Complete context"
	@echo "  make generate-context-code                      # Code only (no docs/tests)"  
	@echo "  make generate-context-small                     # Compressed core"
	@echo "  make db-schema TABLE=users"
	@echo "  make code-search PATTERN=\"TODO\" FILETYPE=py"
	@echo "  make claude-context                             # Claude setup context"