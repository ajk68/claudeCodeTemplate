# Help and documentation commands

.PHONY: help

# Default target
help: ## Show this help message
	@echo "üöÄ AI Coach Research - Development Commands"
	@echo ""
	@echo "üîß DEVELOPMENT SETUP:"
	@echo "  make install                  Install all project dependencies (Python + Node.js)"
	@echo "  make install-python           Install Python dependencies only"
	@echo "  make install-node             Install Node.js dependencies only"
	@echo "  make sync                     Sync Python dependencies with uv (update lock file)"
	@echo "  make sync-all                 Sync all dependencies (Python + Node.js)"
	@echo ""
	@echo "üß™ TESTING & QUALITY:"
	@echo "  make test                     Run all tests using uv"
	@echo "  make test-coverage            Run tests with coverage report"
	@echo "  make lint                     Run linting checks"
	@echo "  make lint-fix                 Automatically fix linting issues"
	@echo "  make lint-fix-unsafe          Fix linting issues including unsafe fixes"
	@echo "  make format                   Format code with ruff"
	@echo ""
	@echo "üßπ CLEANUP:"
	@echo "  make clean                    Clean up generated files and caches"
	@echo "  make clean-all                Clean everything including node_modules"
	@echo ""
	@echo "üì¶ CONTEXT GENERATION:"
	@echo "  make generate-context-full    Generate complete codebase context (everything)"
	@echo "  make generate-context-code    Generate code-only context (excludes docs and tests)"
	@echo "  make generate-context-python  Generate Python-only context (Python files, no tests/docs)"
	@echo "  make generate-context-small   Generate small compressed context (core code only, compressed)"
	@echo "  make generate-context-from-files  Create context from specific files"
	@echo "  make claude-context           Generate Claude setup context for configuration/debugging"
	@echo ""
	@echo "ü§ñ AI DELEGATION:"
	@echo "  make ai-query                 Query AI with smart model selection based on content size"
	@echo "  make ai-analyze-project       Analyze entire project with AI using codebase context"
	@echo "  make review-diff              Review current git diff for issues"
	@echo "  make analyze-files            Get architectural analysis and guidance for specific files"
	@echo "  make analyze-file             Analyze a single file with AI"
	@echo "  make project-status           Get current project status and recent work summary"
	@echo "  make code-search              Fast code search with ripgrep"
	@echo "  make analyze-logs             AI-friendly log analysis with debugging insights"
	@echo ""
	@echo "üöÄ PROJECT PIPELINE:"
	@echo "  make run-pipeline             Run the complete data pipeline"
	@echo "  make clear-cache              Clear all caches (Redis and pickle files)"
	@echo "  make generate-summary         Generate executive summary"
	@echo ""
	@echo "üóÑÔ∏è DATABASE:"
	@echo "  make db-schema                Check database schema"
	@echo ""
	@echo "üí° EXAMPLES:"
	@echo "  make ai-query PROMPT=\"What does this do?\" FILE=\"script.py\""
	@echo "  make ai-analyze-project PROMPT=\"Find all TODO items\" SCOPE=full"
	@echo "  make analyze-files FILES=\"api.py models.py\""
	@echo "  make generate-context-full                      # Complete context"
	@echo "  make generate-context-code                      # Code only (no docs/tests)"  
	@echo "  make generate-context-small                     # Compressed core"
	@echo "  make db-schema TABLE=users"
	@echo "  make code-search PATTERN=\"TODO\" FILETYPE=py"
	@echo "  make claude-context                             # Claude setup context"